<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<mojos>
    <applicationHandler>
        <groupId>com.photon.phresco.commons</groupId>
        <artifactId>phresco-commons</artifactId>
        <version>2.0.0.27002</version>
        <class>com.photon.phresco.impl.JavaApplicationProcessor</class>
        <selectedFeatures>[{&quot;groupId&quot;:&quot;javax.transaction&quot;,&quot;artifactId&quot;:&quot;jta&quot;,&quot;packaging&quot;:&quot;jar&quot;,&quot;versions&quot;:[{&quot;artifactGroupId&quot;:&quot;mod_jta&quot;,&quot;version&quot;:&quot;1.0.1B&quot;,&quot;used&quot;:false,&quot;fileSize&quot;:0,&quot;appliesTo&quot;:[{&quot;techId&quot;:&quot;tech-java-webservice&quot;,&quot;required&quot;:false}],&quot;downloadURL&quot;:&quot;http://172.16.17.226:8080/repository/content/groups/public/javax/transaction/jta/1.0.1B/jta-1.0.1B.jar&quot;,&quot;id&quot;:&quot;mod_jta_tech_java_webservice1.0.1B&quot;,&quot;name&quot;:&quot;jta&quot;,&quot;creationDate&quot;:&quot;Sep 29, 2012 10:54:03 AM&quot;,&quot;system&quot;:false}],&quot;type&quot;:&quot;FEATURE&quot;,&quot;appliesTo&quot;:[{&quot;techId&quot;:&quot;tech-java-standalone&quot;,&quot;core&quot;:false},{&quot;techId&quot;:&quot;tech-java-webservice&quot;,&quot;core&quot;:false},{&quot;techId&quot;:&quot;tech-html5&quot;,&quot;core&quot;:false},{&quot;techId&quot;:&quot;tech-html5-jquery-mobile-widget&quot;,&quot;core&quot;:false},{&quot;techId&quot;:&quot;tech-html5-mobile-widget&quot;,&quot;core&quot;:false},{&quot;techId&quot;:&quot;tech-html5-jquery-widget&quot;,&quot;core&quot;:false},{&quot;techId&quot;:&quot;tech-html5-widget&quot;,&quot;core&quot;:false}],&quot;customerIds&quot;:[&quot;photon&quot;],&quot;used&quot;:false,&quot;id&quot;:&quot;mod_jta&quot;,&quot;name&quot;:&quot;jta&quot;,&quot;description&quot;:&quot;The Java Transaction API (JTA) is one of the Java Enterprise Edition (Java EE) APIs allowing distributed transactions to be done across multiple XA resources in a Java environment. JTA is a specification developed under the Java Community Process as JSR 907. \n\nThe JTA API consists of classes in two Java packages:\n1)javax.transaction\n2)javax.transaction.xa\n\nThe JTA is modelled on the X/Open XA architecture, but it defines two different APIs for demarcating transaction boundaries. It distinguishes between an application server such as an EJB server and an application component. It provides an interface, javax.transaction.TransactionManager, that is used by the application server itself to begin, commit and rollback the transactions. It provides a different interface, the javax.transaction.UserTransaction, that is used by general client code such as a servlet or an EJB to manage the transactions.\n\nJava Transaction API:\n\nThe Java Transaction API consists of three elements: a high-level application transaction demarcation interface, a high-level transaction manager interface intended for an application server, and a standard Java mapping of the X/Open XA protocol intended for a transactional resource manager. The javax.transaction.UserTransaction interface provides the application the ability to control transaction boundaries programmatically. This interface may be used by Java client programs or EJB beans. The UserTransaction.begin method starts a global transaction and associates the transaction with the calling thread. The transaction-to-thread association is managed transparently by the Transaction Manager.\nSupport for nested transactions is not required. The UserTransaction.begin method throws the NotSupportedException when the calling thread is already associated with a transaction and the transaction manager implementation does not support nested transactions. Transaction context propagation between application programs is provided by the underlying transaction manager implementations on the client and server machines. The transaction context format used for propagation is protocol dependent and must be negotiated between the client and server hosts. For example, if the transaction manager is an implementation of the JTS specification, it will use the transaction context propagation format as specified in the CORBA OTS 1.1 specification. Transaction propagation is transparent to application programs. UserTransaction support in EJB server&quot;,&quot;helpText&quot;:&quot;Apache&quot;,&quot;creationDate&quot;:&quot;Dec 12, 2012 7:38:22 PM&quot;,&quot;system&quot;:true}]</selectedFeatures>
        <deletedFeatures>[]</deletedFeatures>
    </applicationHandler>
</mojos>
